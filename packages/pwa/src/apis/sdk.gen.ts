// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetCategoryListData, GetCategoryListResponses, GetTransactionListData, GetTransactionListResponses, PostTransactionCreateData, PostTransactionCreateResponses, DeleteTransactionDeleteData, DeleteTransactionDeleteResponses, GetTransactionFetchData, GetTransactionFetchResponses, PutTransactionUpdateData, PutTransactionUpdateResponses, PostTransactionFetchAiData, PostTransactionFetchAiResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List Category
 */
export const getCategoryList = <ThrowOnError extends boolean = false>(options?: Options<GetCategoryListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCategoryListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/category',
        ...options
    });
};

/**
 * Fetch a transaction list
 */
export const getTransactionList = <ThrowOnError extends boolean = false>(options: Options<GetTransactionListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetTransactionListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction',
        ...options
    });
};

/**
 * Create a new Transaction
 */
export const postTransactionCreate = <ThrowOnError extends boolean = false>(options?: Options<PostTransactionCreateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostTransactionCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete a Transaction
 */
export const deleteTransactionDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteTransactionDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteTransactionDeleteResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction/{transactionId}',
        ...options
    });
};

/**
 * Fetch a Transaction
 */
export const getTransactionFetch = <ThrowOnError extends boolean = false>(options: Options<GetTransactionFetchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetTransactionFetchResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction/{transactionId}',
        ...options
    });
};

/**
 * Update a Transaction
 */
export const putTransactionUpdate = <ThrowOnError extends boolean = false>(options: Options<PutTransactionUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutTransactionUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction/{transactionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Fetch a transaction by LLM message
 */
export const postTransactionFetchAi = <ThrowOnError extends boolean = false>(options?: Options<PostTransactionFetchAiData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostTransactionFetchAiResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/transaction/ai',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};